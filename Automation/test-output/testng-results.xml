<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="6" passed="6" failed="0" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[<a href='F:\clone\ExamdeskAuto\Automation\null\blank_20-02-2020_05_16_05.png'><img src='F:\clone\ExamdeskAuto\Automation\null\blank_20-02-2020_05_16_05.png'height = '100' width = '100'/></a>]]>
    </line>
    <line>
      <![CDATA[<a href='F:\clone\ExamdeskAuto\Automation\src\main\resources\ScreenShots\Login_20-02-2020_05_16_16.png'><img src='F:\clone\ExamdeskAuto\Automation\src\main\resources\ScreenShots\Login_20-02-2020_05_16_16.png'height = '100' width = '100'/></a>]]>
    </line>
    <line>
      <![CDATA[<a href='F:\clone\ExamdeskAuto\Automation\src\main\resources\ScreenShots\Add_New_QuestionsSingleChoice_20-02-2020_05_16_29.png'><img src='F:\clone\ExamdeskAuto\Automation\src\main\resources\ScreenShots\Add_New_QuestionsSingleChoice_20-02-2020_05_16_29.png'height = '100' width = '100'/></a>]]>
    </line>
    <line>
      <![CDATA[<a href='F:\clone\ExamdeskAuto\Automation\src\main\resources\ScreenShots\Add_New_QuestionsMultipleChoice_20-02-2020_05_16_38.png'><img src='F:\clone\ExamdeskAuto\Automation\src\main\resources\ScreenShots\Add_New_QuestionsMultipleChoice_20-02-2020_05_16_38.png'height = '100' width = '100'/></a>]]>
    </line>
    <line>
      <![CDATA[<a href='F:\clone\ExamdeskAuto\Automation\src\main\resources\ScreenShots\Add_New_QuestionsTrueFalseType_20-02-2020_05_16_51.png'><img src='F:\clone\ExamdeskAuto\Automation\src\main\resources\ScreenShots\Add_New_QuestionsTrueFalseType_20-02-2020_05_16_51.png'height = '100' width = '100'/></a>]]>
    </line>
    <line>
      <![CDATA[<a href='F:\clone\ExamdeskAuto\Automation\src\main\resources\ScreenShots\Add_New_QuestionsMatchMatrixType_20-02-2020_05_17_09.png'><img src='F:\clone\ExamdeskAuto\Automation\src\main\resources\ScreenShots\Add_New_QuestionsMatchMatrixType_20-02-2020_05_17_09.png'height = '100' width = '100'/></a>]]>
    </line>
    <line>
      <![CDATA[<a href='F:\clone\ExamdeskAuto\Automation\src\main\resources\ScreenShots\Add_New_QuestionsMatchTheFollowingType_20-02-2020_05_17_28.png'><img src='F:\clone\ExamdeskAuto\Automation\src\main\resources\ScreenShots\Add_New_QuestionsMatchTheFollowingType_20-02-2020_05_17_28.png'height = '100' width = '100'/></a>]]>
    </line>
  </reporter-output>
  <suite started-at="2020-02-20T11:45:58Z" name="Default suite" finished-at="2020-02-20T11:47:28Z" duration-ms="90246">
    <groups>
    </groups>
    <test started-at="2020-02-20T11:45:58Z" name="Default test" finished-at="2020-02-20T11:47:28Z" duration-ms="90246">
      <class name="Examdesk_End_To_End_Flow.Add_Question">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:Examdesk_End_To_End_Flow.Add_Question@158da8e]" started-at="2020-02-20T11:45:58Z" name="beforeSuite" finished-at="2020-02-20T11:45:58Z" duration-ms="175" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:Examdesk_End_To_End_Flow.Add_Question@158da8e]" started-at="2020-02-20T11:45:58Z" name="beforeTest" finished-at="2020-02-20T11:46:02Z" duration-ms="4369" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:Examdesk_End_To_End_Flow.Add_Question@158da8e]" started-at="2020-02-20T11:46:02Z" name="beforeClass" finished-at="2020-02-20T11:46:02Z" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:Examdesk_End_To_End_Flow.Add_Question@158da8e]" started-at="2020-02-20T11:46:02Z" name="beforeMethod" finished-at="2020-02-20T11:46:02Z" duration-ms="14" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Examdesk_End_To_End_Flow.Add_Question.Login() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="Login()[pri:1, instance:Examdesk_End_To_End_Flow.Add_Question@158da8e]" started-at="2020-02-20T11:46:02Z" name="Login" finished-at="2020-02-20T11:46:16Z" duration-ms="13041" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[<a href='F:\clone\ExamdeskAuto\Automation\null\blank_20-02-2020_05_16_05.png'><img src='F:\clone\ExamdeskAuto\Automation\null\blank_20-02-2020_05_16_05.png'height = '100' width = '100'/></a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:Examdesk_End_To_End_Flow.Add_Question@158da8e]" started-at="2020-02-20T11:46:16Z" name="afterMethod" finished-at="2020-02-20T11:46:17Z" duration-ms="1366" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Login status=SUCCESS method=Add_Question.Login()[pri:1, instance:Examdesk_End_To_End_Flow.Add_Question@158da8e] output=<a href='F:\clone\ExamdeskAuto\Automation\null\blank_20-02-2020_05_16_05.png'><img src='F:\clone\ExamdeskAuto\Automation\null\blank_20-02-2020_05_16_05.png'height = '100' width = '100'/></a>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<a href='F:\clone\ExamdeskAuto\Automation\src\main\resources\ScreenShots\Login_20-02-2020_05_16_16.png'><img src='F:\clone\ExamdeskAuto\Automation\src\main\resources\ScreenShots\Login_20-02-2020_05_16_16.png'height = '100' width = '100'/></a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:Examdesk_End_To_End_Flow.Add_Question@158da8e]" started-at="2020-02-20T11:46:18Z" name="beforeMethod" finished-at="2020-02-20T11:46:18Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Examdesk_End_To_End_Flow.Add_Question.Add_New_QuestionsSingleChoice(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="Add_New_QuestionsSingleChoice(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:Examdesk_End_To_End_Flow.Add_Question@158da8e]" started-at="2020-02-20T11:46:18Z" name="Add_New_QuestionsSingleChoice" data-provider="TestData" finished-at="2020-02-20T11:46:29Z" duration-ms="10787" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[this is single choice question added?]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[given option1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[given option2]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[given option3]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[given option4]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[dsomocwsc l]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Add_New_QuestionsSingleChoice -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:Examdesk_End_To_End_Flow.Add_Question@158da8e]" started-at="2020-02-20T11:46:29Z" name="afterMethod" finished-at="2020-02-20T11:46:29Z" duration-ms="479" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Add_New_QuestionsSingleChoice status=SUCCESS method=Add_Question.Add_New_QuestionsSingleChoice(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:Examdesk_End_To_End_Flow.Add_Question@158da8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<a href='F:\clone\ExamdeskAuto\Automation\src\main\resources\ScreenShots\Add_New_QuestionsSingleChoice_20-02-2020_05_16_29.png'><img src='F:\clone\ExamdeskAuto\Automation\src\main\resources\ScreenShots\Add_New_QuestionsSingleChoice_20-02-2020_05_16_29.png'height = '100' width = '100'/></a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:Examdesk_End_To_End_Flow.Add_Question@158da8e]" started-at="2020-02-20T11:46:30Z" name="beforeMethod" finished-at="2020-02-20T11:46:30Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Examdesk_End_To_End_Flow.Add_Question.Add_New_QuestionsMultipleChoice(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="Add_New_QuestionsMultipleChoice(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:3, instance:Examdesk_End_To_End_Flow.Add_Question@158da8e]" started-at="2020-02-20T11:46:30Z" name="Add_New_QuestionsMultipleChoice" data-provider="TestData1" finished-at="2020-02-20T11:46:38Z" duration-ms="8005" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[this is Multiple choice question added?]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[MC option1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[MC given option2]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[MC given option3]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[MC given option4]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Multiple Choice]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Add_New_QuestionsMultipleChoice -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:Examdesk_End_To_End_Flow.Add_Question@158da8e]" started-at="2020-02-20T11:46:38Z" name="afterMethod" finished-at="2020-02-20T11:46:38Z" duration-ms="547" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Add_New_QuestionsMultipleChoice status=SUCCESS method=Add_Question.Add_New_QuestionsMultipleChoice(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:3, instance:Examdesk_End_To_End_Flow.Add_Question@158da8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<a href='F:\clone\ExamdeskAuto\Automation\src\main\resources\ScreenShots\Add_New_QuestionsMultipleChoice_20-02-2020_05_16_38.png'><img src='F:\clone\ExamdeskAuto\Automation\src\main\resources\ScreenShots\Add_New_QuestionsMultipleChoice_20-02-2020_05_16_38.png'height = '100' width = '100'/></a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:Examdesk_End_To_End_Flow.Add_Question@158da8e]" started-at="2020-02-20T11:46:38Z" name="beforeMethod" finished-at="2020-02-20T11:46:38Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Examdesk_End_To_End_Flow.Add_Question.Add_New_QuestionsTrueFalseType(java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="Add_New_QuestionsTrueFalseType(java.lang.String, java.lang.String)[pri:4, instance:Examdesk_End_To_End_Flow.Add_Question@158da8e]" started-at="2020-02-20T11:46:38Z" name="Add_New_QuestionsTrueFalseType" data-provider="TestData2" finished-at="2020-02-20T11:46:51Z" duration-ms="13094" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[this is true or false question added?]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true or false  question]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Add_New_QuestionsTrueFalseType -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:Examdesk_End_To_End_Flow.Add_Question@158da8e]" started-at="2020-02-20T11:46:51Z" name="afterMethod" finished-at="2020-02-20T11:46:52Z" duration-ms="532" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Add_New_QuestionsTrueFalseType status=SUCCESS method=Add_Question.Add_New_QuestionsTrueFalseType(java.lang.String, java.lang.String)[pri:4, instance:Examdesk_End_To_End_Flow.Add_Question@158da8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<a href='F:\clone\ExamdeskAuto\Automation\src\main\resources\ScreenShots\Add_New_QuestionsTrueFalseType_20-02-2020_05_16_51.png'><img src='F:\clone\ExamdeskAuto\Automation\src\main\resources\ScreenShots\Add_New_QuestionsTrueFalseType_20-02-2020_05_16_51.png'height = '100' width = '100'/></a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:Examdesk_End_To_End_Flow.Add_Question@158da8e]" started-at="2020-02-20T11:46:52Z" name="beforeMethod" finished-at="2020-02-20T11:46:52Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Examdesk_End_To_End_Flow.Add_Question.Add_New_QuestionsMatchMatrixType(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="Add_New_QuestionsMatchMatrixType(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:5, instance:Examdesk_End_To_End_Flow.Add_Question@158da8e]" started-at="2020-02-20T11:46:52Z" name="Add_New_QuestionsMatchMatrixType" data-provider="TestData3" finished-at="2020-02-20T11:47:09Z" duration-ms="17507" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[this is Match Matrix question added?]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[MM option1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[MM given option2]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[MM given option3]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[MM given option4]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[MM   option1]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[MM given option2]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[MM  given option3]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[MM given option4]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[Match matrix question]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Add_New_QuestionsMatchMatrixType -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:Examdesk_End_To_End_Flow.Add_Question@158da8e]" started-at="2020-02-20T11:47:09Z" name="afterMethod" finished-at="2020-02-20T11:47:10Z" duration-ms="615" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Add_New_QuestionsMatchMatrixType status=SUCCESS method=Add_Question.Add_New_QuestionsMatchMatrixType(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:5, instance:Examdesk_End_To_End_Flow.Add_Question@158da8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<a href='F:\clone\ExamdeskAuto\Automation\src\main\resources\ScreenShots\Add_New_QuestionsMatchMatrixType_20-02-2020_05_17_09.png'><img src='F:\clone\ExamdeskAuto\Automation\src\main\resources\ScreenShots\Add_New_QuestionsMatchMatrixType_20-02-2020_05_17_09.png'height = '100' width = '100'/></a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:Examdesk_End_To_End_Flow.Add_Question@158da8e]" started-at="2020-02-20T11:47:10Z" name="beforeMethod" finished-at="2020-02-20T11:47:10Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Examdesk_End_To_End_Flow.Add_Question.Add_New_QuestionsMatchTheFollowingType(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="Add_New_QuestionsMatchTheFollowingType(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:6, instance:Examdesk_End_To_End_Flow.Add_Question@158da8e]" started-at="2020-02-20T11:47:10Z" name="Add_New_QuestionsMatchTheFollowingType" data-provider="TestData4" finished-at="2020-02-20T11:47:28Z" duration-ms="17659" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[this is Match following question added?]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[MF option1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[MF given option2]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[MF given option3]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[MF given option4]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[MF  option1]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[MF given option2]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[MF  given option3]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[MF given option4]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[Match matrix question]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Add_New_QuestionsMatchTheFollowingType -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:Examdesk_End_To_End_Flow.Add_Question@158da8e]" started-at="2020-02-20T11:47:28Z" name="afterMethod" finished-at="2020-02-20T11:47:28Z" duration-ms="616" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Add_New_QuestionsMatchTheFollowingType status=SUCCESS method=Add_Question.Add_New_QuestionsMatchTheFollowingType(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:6, instance:Examdesk_End_To_End_Flow.Add_Question@158da8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<a href='F:\clone\ExamdeskAuto\Automation\src\main\resources\ScreenShots\Add_New_QuestionsMatchTheFollowingType_20-02-2020_05_17_28.png'><img src='F:\clone\ExamdeskAuto\Automation\src\main\resources\ScreenShots\Add_New_QuestionsMatchTheFollowingType_20-02-2020_05_17_28.png'height = '100' width = '100'/></a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- Examdesk_End_To_End_Flow.Add_Question -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
